#include "hdf5_particle_twophase.h"
namespace mpm {
namespace hdf5 {
namespace particletwophase {
const size_t dst_offset[NFIELDS] = {
    // Solid phase
    HOFFSET(HDF5ParticleTwoPhase, id),
    HOFFSET(HDF5ParticleTwoPhase, mass),
    HOFFSET(HDF5ParticleTwoPhase, volume),
    HOFFSET(HDF5ParticleTwoPhase, pressure),
    HOFFSET(HDF5ParticleTwoPhase, coord_x),
    HOFFSET(HDF5ParticleTwoPhase, coord_y),
    HOFFSET(HDF5ParticleTwoPhase, coord_z),
    HOFFSET(HDF5ParticleTwoPhase, displacement_x),
    HOFFSET(HDF5ParticleTwoPhase, displacement_y),
    HOFFSET(HDF5ParticleTwoPhase, displacement_z),
    HOFFSET(HDF5ParticleTwoPhase, nsize_x),
    HOFFSET(HDF5ParticleTwoPhase, nsize_y),
    HOFFSET(HDF5ParticleTwoPhase, nsize_z),
    HOFFSET(HDF5ParticleTwoPhase, velocity_x),
    HOFFSET(HDF5ParticleTwoPhase, velocity_y),
    HOFFSET(HDF5ParticleTwoPhase, velocity_z),
    HOFFSET(HDF5ParticleTwoPhase, stress_xx),
    HOFFSET(HDF5ParticleTwoPhase, stress_yy),
    HOFFSET(HDF5ParticleTwoPhase, stress_zz),
    HOFFSET(HDF5ParticleTwoPhase, tau_xy),
    HOFFSET(HDF5ParticleTwoPhase, tau_yz),
    HOFFSET(HDF5ParticleTwoPhase, tau_xz),
    HOFFSET(HDF5ParticleTwoPhase, strain_xx),
    HOFFSET(HDF5ParticleTwoPhase, strain_yy),
    HOFFSET(HDF5ParticleTwoPhase, strain_zz),
    HOFFSET(HDF5ParticleTwoPhase, gamma_xy),
    HOFFSET(HDF5ParticleTwoPhase, gamma_yz),
    HOFFSET(HDF5ParticleTwoPhase, gamma_xz),
    HOFFSET(HDF5ParticleTwoPhase, epsilon_v),
    HOFFSET(HDF5ParticleTwoPhase, status),
    HOFFSET(HDF5ParticleTwoPhase, cell_id),
    HOFFSET(HDF5ParticleTwoPhase, material_id),
    HOFFSET(HDF5ParticleTwoPhase, nstate_vars),
    HOFFSET(HDF5ParticleTwoPhase, svars[0]),
    HOFFSET(HDF5ParticleTwoPhase, svars[1]),
    HOFFSET(HDF5ParticleTwoPhase, svars[2]),
    HOFFSET(HDF5ParticleTwoPhase, svars[3]),
    HOFFSET(HDF5ParticleTwoPhase, svars[4]),
    HOFFSET(HDF5ParticleTwoPhase, svars[5]),
    HOFFSET(HDF5ParticleTwoPhase, svars[6]),
    HOFFSET(HDF5ParticleTwoPhase, svars[7]),
    HOFFSET(HDF5ParticleTwoPhase, svars[8]),
    HOFFSET(HDF5ParticleTwoPhase, svars[9]),
    HOFFSET(HDF5ParticleTwoPhase, svars[10]),
    HOFFSET(HDF5ParticleTwoPhase, svars[11]),
    HOFFSET(HDF5ParticleTwoPhase, svars[12]),
    HOFFSET(HDF5ParticleTwoPhase, svars[13]),
    HOFFSET(HDF5ParticleTwoPhase, svars[14]),
    HOFFSET(HDF5ParticleTwoPhase, svars[15]),
    HOFFSET(HDF5ParticleTwoPhase, svars[16]),
    HOFFSET(HDF5ParticleTwoPhase, svars[17]),
    HOFFSET(HDF5ParticleTwoPhase, svars[18]),
    HOFFSET(HDF5ParticleTwoPhase, svars[19]),
    // Fluid phase
    HOFFSET(HDF5ParticleTwoPhase, liquid_mass),
    HOFFSET(HDF5ParticleTwoPhase, liquid_velocity_x),
    HOFFSET(HDF5ParticleTwoPhase, liquid_velocity_y),
    HOFFSET(HDF5ParticleTwoPhase, liquid_velocity_z),
    HOFFSET(HDF5ParticleTwoPhase, porosity),
    HOFFSET(HDF5ParticleTwoPhase, liquid_saturation),
    HOFFSET(HDF5ParticleTwoPhase, liquid_material_id),
    HOFFSET(HDF5ParticleTwoPhase, nliquid_state_vars),
    HOFFSET(HDF5ParticleTwoPhase, liquid_svars[0]),
    HOFFSET(HDF5ParticleTwoPhase, liquid_svars[1]),
    HOFFSET(HDF5ParticleTwoPhase, liquid_svars[2]),
    HOFFSET(HDF5ParticleTwoPhase, liquid_svars[3]),
    HOFFSET(HDF5ParticleTwoPhase, liquid_svars[4]),
};

// Get size of particletwophase
HDF5ParticleTwoPhase particle;
const size_t dst_sizes[NFIELDS] = {
    // Solid phase
    sizeof(particle.id),
    sizeof(particle.mass),
    sizeof(particle.volume),
    sizeof(particle.pressure),
    sizeof(particle.coord_x),
    sizeof(particle.coord_y),
    sizeof(particle.coord_z),
    sizeof(particle.displacement_x),
    sizeof(particle.displacement_y),
    sizeof(particle.displacement_z),
    sizeof(particle.nsize_x),
    sizeof(particle.nsize_y),
    sizeof(particle.nsize_z),
    sizeof(particle.velocity_x),
    sizeof(particle.velocity_y),
    sizeof(particle.velocity_z),
    sizeof(particle.stress_xx),
    sizeof(particle.stress_yy),
    sizeof(particle.stress_zz),
    sizeof(particle.tau_xy),
    sizeof(particle.tau_yz),
    sizeof(particle.tau_xz),
    sizeof(particle.strain_xx),
    sizeof(particle.strain_yy),
    sizeof(particle.strain_zz),
    sizeof(particle.gamma_xy),
    sizeof(particle.gamma_yz),
    sizeof(particle.gamma_xz),
    sizeof(particle.epsilon_v),
    sizeof(particle.status),
    sizeof(particle.cell_id),
    sizeof(particle.material_id),
    sizeof(particle.nstate_vars),
    sizeof(particle.svars[0]),
    sizeof(particle.svars[1]),
    sizeof(particle.svars[2]),
    sizeof(particle.svars[3]),
    sizeof(particle.svars[4]),
    sizeof(particle.svars[5]),
    sizeof(particle.svars[6]),
    sizeof(particle.svars[7]),
    sizeof(particle.svars[8]),
    sizeof(particle.svars[9]),
    sizeof(particle.svars[10]),
    sizeof(particle.svars[11]),
    sizeof(particle.svars[12]),
    sizeof(particle.svars[13]),
    sizeof(particle.svars[14]),
    sizeof(particle.svars[15]),
    sizeof(particle.svars[16]),
    sizeof(particle.svars[17]),
    sizeof(particle.svars[18]),
    sizeof(particle.svars[19]),
    // Fluid phase
    sizeof(particle.liquid_mass),
    sizeof(particle.liquid_velocity_x),
    sizeof(particle.liquid_velocity_y),
    sizeof(particle.liquid_velocity_z),
    sizeof(particle.porosity),
    sizeof(particle.liquid_saturation),
    sizeof(particle.liquid_material_id),
    sizeof(particle.nliquid_state_vars),
    sizeof(particle.liquid_svars[0]),
    sizeof(particle.liquid_svars[1]),
    sizeof(particle.liquid_svars[2]),
    sizeof(particle.liquid_svars[3]),
    sizeof(particle.liquid_svars[4]),
};

// Define particletwophase field information
const char* field_names[NFIELDS] = {
    // Solid phase
    "id",
    "mass",
    "volume",
    "pressure",
    "coord_x",
    "coord_y",
    "coord_z",
    "displacement_x",
    "displacement_y",
    "displacement_z",
    "nsize_x",
    "nsize_y",
    "nsize_z",
    "velocity_x",
    "velocity_y",
    "velocity_z",
    "stress_xx",
    "stress_yy",
    "stress_zz",
    "tau_xy",
    "tau_yz",
    "tau_xz",
    "strain_xx",
    "strain_yy",
    "strain_zz",
    "gamma_xy",
    "gamma_yz",
    "gamma_xz",
    "epsilon_v",
    "status",
    "cell_id",
    "material_id",
    "nstate_vars",
    "svars_0",
    "svars_1",
    "svars_2",
    "svars_3",
    "svars_4",
    "svars_5",
    "svars_6",
    "svars_7",
    "svars_8",
    "svars_9",
    "svars_10",
    "svars_11",
    "svars_12",
    "svars_13",
    "svars_14",
    "svars_15",
    "svars_16",
    "svars_17",
    "svars_18",
    "svars_19",
    // Fluid phase
    "liquid_mass",
    "liquid_velocity_x",
    "liquid_velocity_y",
    "liquid_velocity_z",
    "porosity",
    "liquid_saturation",
    "liquid_material_id",
    "nliquid_state_vars",
    "liquid_svars_0",
    "liquid_svars_1",
    "liquid_svars_2",
    "liquid_svars_3",
    "liquid_svars_4",
};

// Initialize field types
const hid_t field_type[NFIELDS] = {
    H5T_NATIVE_LLONG,  H5T_NATIVE_DOUBLE, H5T_NATIVE_DOUBLE, H5T_NATIVE_DOUBLE,
    H5T_NATIVE_DOUBLE, H5T_NATIVE_DOUBLE, H5T_NATIVE_DOUBLE, H5T_NATIVE_DOUBLE,
    H5T_NATIVE_DOUBLE, H5T_NATIVE_DOUBLE, H5T_NATIVE_DOUBLE, H5T_NATIVE_DOUBLE,
    H5T_NATIVE_DOUBLE, H5T_NATIVE_DOUBLE, H5T_NATIVE_DOUBLE, H5T_NATIVE_DOUBLE,
    H5T_NATIVE_DOUBLE, H5T_NATIVE_DOUBLE, H5T_NATIVE_DOUBLE, H5T_NATIVE_DOUBLE,
    H5T_NATIVE_DOUBLE, H5T_NATIVE_DOUBLE, H5T_NATIVE_DOUBLE, H5T_NATIVE_DOUBLE,
    H5T_NATIVE_DOUBLE, H5T_NATIVE_DOUBLE, H5T_NATIVE_DOUBLE, H5T_NATIVE_DOUBLE,
    H5T_NATIVE_DOUBLE, H5T_NATIVE_HBOOL,  H5T_NATIVE_LLONG,  H5T_NATIVE_UINT,
    H5T_NATIVE_UINT,   H5T_NATIVE_DOUBLE, H5T_NATIVE_DOUBLE, H5T_NATIVE_DOUBLE,
    H5T_NATIVE_DOUBLE, H5T_NATIVE_DOUBLE, H5T_NATIVE_DOUBLE, H5T_NATIVE_DOUBLE,
    H5T_NATIVE_DOUBLE, H5T_NATIVE_DOUBLE, H5T_NATIVE_DOUBLE, H5T_NATIVE_DOUBLE,
    H5T_NATIVE_DOUBLE, H5T_NATIVE_DOUBLE, H5T_NATIVE_DOUBLE, H5T_NATIVE_DOUBLE,
    H5T_NATIVE_DOUBLE, H5T_NATIVE_DOUBLE, H5T_NATIVE_DOUBLE, H5T_NATIVE_DOUBLE,
    H5T_NATIVE_DOUBLE, H5T_NATIVE_DOUBLE, H5T_NATIVE_DOUBLE, H5T_NATIVE_DOUBLE,
    H5T_NATIVE_DOUBLE, H5T_NATIVE_DOUBLE, H5T_NATIVE_DOUBLE, H5T_NATIVE_UINT,
    H5T_NATIVE_UINT,   H5T_NATIVE_DOUBLE, H5T_NATIVE_DOUBLE, H5T_NATIVE_DOUBLE,
    H5T_NATIVE_DOUBLE, H5T_NATIVE_DOUBLE};
}  // namespace particletwophase
}  // namespace hdf5
}  // namespace mpm
